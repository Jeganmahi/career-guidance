{"ast":null,"code":"var _jsxFileName = \"/home/jithu/Documents/career-guidance/fronend/src/layouts/STUDENT/MeetingList/components/AlumniTable.jsx\";\nimport React from \"react\";\nimport DataTable from \"examples/Tables/DataTable\";\nimport MDTypography from \"components/MDTypography\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function AlumniTable({\n  alumniData\n}) {\n  const checkMeetingDate = date => {\n    if (date === \"\") {\n      return /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: \"N/A\"\n      }, void 0, false);\n    } else {\n      return /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: date\n      }, void 0, false);\n    }\n  };\n  const checkMeetingTime = time => {\n    if (time === \"\") {\n      return /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: \"N/A\"\n      }, void 0, false);\n    } else {\n      return /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: time\n      }, void 0, false);\n    }\n  };\n  const checkStatus = status => {\n    if (status === \"pending\") {\n      return /*#__PURE__*/_jsxDEV(MDTypography, {\n        color: \"warning\",\n        children: status\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 14\n      }, this);\n    }\n    if (status === \"completed\") {\n      return /*#__PURE__*/_jsxDEV(MDTypography, {\n        color: \"success\",\n        children: status\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 14\n      }, this);\n    }\n    if (status === \"rejected\") {\n      return /*#__PURE__*/_jsxDEV(MDTypography, {\n        color: \"success\",\n        children: status\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 14\n      }, this);\n    }\n  };\n  const columns = [{\n    Header: \"SNo.\",\n    accessor: \"no\",\n    align: \"left\"\n  },\n  // Updated to \"no\" instead of \"no.\"\n  {\n    Header: \"Staff name\",\n    accessor: \"staffName\",\n    align: \"left\"\n  }, {\n    Header: \"Meeting regarding\",\n    accessor: \"regarding\",\n    align: \"center\"\n  }, {\n    Header: \"Meeting date\",\n    accessor: \"meetingDate\",\n    align: \"center\"\n  }, {\n    Header: \"Meeting time\",\n    accessor: \"meetingTime\",\n    align: \"center\"\n  }, {\n    Header: \"Status\",\n    accessor: \"status\",\n    align: \"center\"\n  }];\n  const rows = alumniData === null || alumniData === void 0 ? void 0 : alumniData.map((data, index) => ({\n    no: index + 1,\n    // Serial number\n    staffName: data.staff_name,\n    regarding: data.meeting_request,\n    meetingDate: checkMeetingDate(data.meeting_date),\n    meetingTime: checkMeetingTime(data.meeting_time),\n    status: checkStatus(data.status)\n  }));\n  return /*#__PURE__*/_jsxDEV(DataTable, {\n    table: {\n      columns,\n      rows\n    },\n    isSorted: true,\n    entriesPerPage: true,\n    showTotalEntries: true,\n    noEndBorder: true\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 5\n  }, this);\n}\n_c = AlumniTable;\nvar _c;\n$RefreshReg$(_c, \"AlumniTable\");","map":{"version":3,"names":["React","DataTable","MDTypography","Fragment","_Fragment","jsxDEV","_jsxDEV","AlumniTable","alumniData","checkMeetingDate","date","children","checkMeetingTime","time","checkStatus","status","color","fileName","_jsxFileName","lineNumber","columnNumber","columns","Header","accessor","align","rows","map","data","index","no","staffName","staff_name","regarding","meeting_request","meetingDate","meeting_date","meetingTime","meeting_time","table","isSorted","entriesPerPage","showTotalEntries","noEndBorder","_c","$RefreshReg$"],"sources":["/home/jithu/Documents/career-guidance/fronend/src/layouts/STUDENT/MeetingList/components/AlumniTable.jsx"],"sourcesContent":["import React from \"react\";\nimport DataTable from \"examples/Tables/DataTable\";\nimport MDTypography from \"components/MDTypography\";\nexport default function AlumniTable({ alumniData }) {\n  const checkMeetingDate = (date) => {\n    if (date === \"\") {\n      return <>N/A</>;\n    } else {\n      return <>{date}</>;\n    }\n  };\n  const checkMeetingTime = (time) => {\n    if (time === \"\") {\n      return <>N/A</>;\n    } else {\n      return <>{time}</>;\n    }\n  };\n  const checkStatus = (status) => {\n    if (status === \"pending\") {\n      return <MDTypography color=\"warning\">{status}</MDTypography>;\n    }\n    if (status === \"completed\") {\n      return <MDTypography color=\"success\">{status}</MDTypography>;\n    }\n    if (status === \"rejected\") {\n      return <MDTypography color=\"success\">{status}</MDTypography>;\n    }\n  };\n\n  const columns = [\n    { Header: \"SNo.\", accessor: \"no\", align: \"left\" }, // Updated to \"no\" instead of \"no.\"\n    { Header: \"Staff name\", accessor: \"staffName\", align: \"left\" },\n    { Header: \"Meeting regarding\", accessor: \"regarding\", align: \"center\" },\n    { Header: \"Meeting date\", accessor: \"meetingDate\", align: \"center\" },\n    { Header: \"Meeting time\", accessor: \"meetingTime\", align: \"center\" },\n    { Header: \"Status\", accessor: \"status\", align: \"center\" },\n  ];\n  const rows = alumniData?.map((data, index) => ({\n    no: index + 1, // Serial number\n    staffName: data.staff_name,\n    regarding: data.meeting_request,\n    meetingDate: checkMeetingDate(data.meeting_date),\n    meetingTime: checkMeetingTime(data.meeting_time),\n    status: checkStatus(data.status),\n  }));\n  return (\n    <DataTable\n      table={{ columns, rows }}\n      isSorted={true}\n      entriesPerPage={true}\n      showTotalEntries={true}\n      noEndBorder\n    />\n  );\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}