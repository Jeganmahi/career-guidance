{"ast":null,"code":"var _jsxFileName = \"/home/jithu/Documents/career-guidance/fronend/src/layouts/profile/index.js\",\n  _s = $RefreshSig$();\nimport Grid from \"@mui/material/Grid\";\nimport Divider from \"@mui/material/Divider\";\nimport Box from '@mui/material/Box';\nimport TextField from '@mui/material/TextField';\nimport DashboardLayout from \"examples/LayoutContainers/DashboardLayout\";\nimport DashboardNavbar from \"examples/Navbars/DashboardNavbar\";\nimport Footer from \"examples/Footer\";\nimport Header from \"layouts/profile/components/Header\";\nimport MDButton from \"components/MDButton\";\nimport { useState, useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Overview() {\n  _s();\n  const [data, setData] = useState([]);\n  const [isEditMode, setIsEditMode] = useState(false);\n  const handleEditClick = () => {\n    setIsEditMode(!isEditMode);\n  };\n  const handleSaveClick = async () => {\n    console.log(data);\n    try {\n      const response = await fetch(`http://localhost:5001/saveProfileData`, {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify(data[0]) // Assuming data[0] contains the updated profile data\n      });\n      // Handle response if needed\n      console.log(\"Data saved successfully\");\n    } catch (error) {\n      console.error(\"Error saving profile data:\", error);\n    }\n  };\n  useEffect(() => {\n    const profileFetch = async () => {\n      try {\n        const response = await fetch(`http://localhost:5001/profileData`);\n        const result = await response.json();\n        setData(result);\n        console.log(result);\n      } catch (error) {\n        console.error(\"Error fetching test data:\", error);\n      }\n    };\n    profileFetch();\n  }, []); // Empty dependency array to fetch data only once on component mount\n\n  const handleChange = (index, fieldName, value) => {\n    const newData = [...data];\n    newData[index] = {\n      ...newData[index],\n      [fieldName]: value\n    };\n    setData(newData);\n  };\n  return /*#__PURE__*/_jsxDEV(DashboardLayout, {\n    children: [/*#__PURE__*/_jsxDEV(DashboardNavbar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Header, {\n      title: \"Profile\",\n      subtitle: \"Manage your profile settings\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      p: 3,\n      children: /*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        spacing: 3,\n        children: /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          md: 6,\n          children: [/*#__PURE__*/_jsxDEV(Box, {\n            sx: {\n              display: \"flex\",\n              alignItems: \"center\"\n            },\n            children: [/*#__PURE__*/_jsxDEV(Divider, {\n              orientation: \"vertical\",\n              flexItem: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 64,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Box, {\n              ml: 2,\n              children: data.map((item, index) => /*#__PURE__*/_jsxDEV(TextField, {\n                fullWidth: true,\n                id: item.id,\n                label: item.label,\n                disabled: !isEditMode,\n                variant: \"outlined\",\n                value: item.value,\n                sx: {\n                  marginBottom: \"20px\"\n                },\n                onChange: e => handleChange(index, item.id, e.target.value)\n              }, index, false, {\n                fileName: _jsxFileName,\n                lineNumber: 67,\n                columnNumber: 19\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 65,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Box, {\n            sx: {\n              marginLeft: '600px'\n            },\n            children: isEditMode ? /*#__PURE__*/_jsxDEV(MDButton, {\n              color: \"info\",\n              onClick: handleSaveClick,\n              children: \"Save\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 83,\n              columnNumber: 17\n            }, this) : /*#__PURE__*/_jsxDEV(MDButton, {\n              color: \"info\",\n              onClick: handleEditClick,\n              children: \"Edit\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 85,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 5\n  }, this);\n}\n_s(Overview, \"KB42G6KomWHrEX3Xv4xBeFv542Q=\");\n_c = Overview;\nexport default Overview;\nvar _c;\n$RefreshReg$(_c, \"Overview\");","map":{"version":3,"names":["Grid","Divider","Box","TextField","DashboardLayout","DashboardNavbar","Footer","Header","MDButton","useState","useEffect","jsxDEV","_jsxDEV","Overview","_s","data","setData","isEditMode","setIsEditMode","handleEditClick","handleSaveClick","console","log","response","fetch","method","headers","body","JSON","stringify","error","profileFetch","result","json","handleChange","index","fieldName","value","newData","children","fileName","_jsxFileName","lineNumber","columnNumber","title","subtitle","p","container","spacing","item","xs","md","sx","display","alignItems","orientation","flexItem","ml","map","fullWidth","id","label","disabled","variant","marginBottom","onChange","e","target","marginLeft","color","onClick","_c","$RefreshReg$"],"sources":["/home/jithu/Documents/career-guidance/fronend/src/layouts/profile/index.js"],"sourcesContent":["import Grid from \"@mui/material/Grid\";\nimport Divider from \"@mui/material/Divider\";\nimport Box from '@mui/material/Box';\nimport TextField from '@mui/material/TextField';\nimport DashboardLayout from \"examples/LayoutContainers/DashboardLayout\";\nimport DashboardNavbar from \"examples/Navbars/DashboardNavbar\";\nimport Footer from \"examples/Footer\";\nimport Header from \"layouts/profile/components/Header\";\nimport MDButton from \"components/MDButton\";\nimport { useState, useEffect } from \"react\";\n\nfunction Overview() {\n  const [data, setData] = useState([]);\n  const [isEditMode, setIsEditMode] = useState(false);\n\n  const handleEditClick = () => {\n    setIsEditMode(!isEditMode);\n  };\n  const handleSaveClick = async () => {\n    console.log(data)\n    try {\n      const response = await fetch(`http://localhost:5001/saveProfileData`, {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify(data[0]), // Assuming data[0] contains the updated profile data\n      });\n      // Handle response if needed\n      console.log(\"Data saved successfully\");\n    } catch (error) {\n      console.error(\"Error saving profile data:\", error);\n    }\n  };\n\n  useEffect(() => {\n    const profileFetch = async () => {\n      try {\n        const response = await fetch(`http://localhost:5001/profileData`);\n        const result = await response.json();\n        setData(result);\n        console.log(result);\n      } catch (error) {\n        console.error(\"Error fetching test data:\", error);\n      }\n    };\n    profileFetch();\n  }, []); // Empty dependency array to fetch data only once on component mount\n\n  const handleChange = (index, fieldName, value) => {\n    const newData = [...data];\n    newData[index] = { ...newData[index], [fieldName]: value };\n    setData(newData);\n  };\n\n  return (\n    <DashboardLayout>\n      <DashboardNavbar />\n      <Header title=\"Profile\" subtitle=\"Manage your profile settings\" />\n      <Box p={3}>\n        <Grid container spacing={3}>\n          <Grid item xs={12} md={6}>\n            <Box sx={{ display: \"flex\", alignItems: \"center\" }}>\n              <Divider orientation=\"vertical\" flexItem />\n              <Box ml={2}>\n                {data.map((item, index) => (\n                  <TextField\n                    key={index}\n                    fullWidth\n                    id={item.id}\n                    label={item.label}\n                    disabled={!isEditMode}\n                    variant=\"outlined\"\n                    value={item.value}\n                    sx={{ marginBottom: \"20px\" }}\n                    onChange={(e) => handleChange(index, item.id, e.target.value)}\n                  />\n                ))}\n              </Box>\n            </Box>\n            <Box sx={{ marginLeft: '600px' }}>\n              {isEditMode ? (\n                <MDButton color=\"info\" onClick={handleSaveClick}>Save</MDButton>\n              ) : (\n                <MDButton color=\"info\" onClick={handleEditClick}>Edit</MDButton>\n              )}\n            </Box>\n          </Grid>\n        </Grid>\n      </Box>\n      <Footer />\n    </DashboardLayout>\n  );\n}\n\nexport default Overview;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}