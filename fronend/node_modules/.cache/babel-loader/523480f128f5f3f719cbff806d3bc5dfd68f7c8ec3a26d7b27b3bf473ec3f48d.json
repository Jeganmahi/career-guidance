{"ast":null,"code":"var _jsxFileName = \"/home/jithu/Documents/career-guidance/fronend/src/layouts/StaffEntry/data/StaffEntryTable.jsx\";\nimport React from 'react';\nimport MDBox from 'components/MDBox';\nimport MDButton from 'components/MDButton';\nimport DataTable from 'examples/Tables/DataTable';\nimport DeleteIcon from '@mui/icons-material/Delete';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function StaffEntryTable({\n  staffData\n}) {\n  const handleViewCodingQuestions = async ID => {\n    try {\n      const response = await fetch(`http://localhost:5001/Codequestion/${ID}`);\n      const jsondata = await response.json();\n      cfd(jsondata);\n      console.log(codeFormattedData);\n    } catch (error) {\n      console.error(\"Error fetching questions:\", error);\n    }\n  };\n  const handleDelete = async ID => {\n    try {\n      const response = await fetch(`http://localhost:5001/staffDelete/${ID}`);\n      const result = await response.json();\n      staffData();\n    } catch (error) {\n      console.error(\"Error fetching  awareness program:\", error);\n    }\n  };\n  const columns = [{\n    Header: \"Name\",\n    accessor: \"name\",\n    width: \"45%\",\n    align: \"left\"\n  }, {\n    Header: \"Staff ID\",\n    accessor: \"id\",\n    align: \"left\"\n  }, {\n    Header: \"email\",\n    accessor: \"email\",\n    align: \"center\"\n  }, {\n    Header: \"Domain\",\n    accessor: \"domain\",\n    align: \"center\"\n  }, {\n    Header: \"DOJ\",\n    accessor: \"doj\",\n    align: \"center\"\n  }, {\n    Header: \"Action\",\n    accessor: \"action\",\n    align: \"center\"\n  }];\n  const rows = staffData.map(data => ({\n    name: data.staff_name,\n    id: data.staff_id,\n    email: data.staff_email,\n    // Add logic to calculate difficulty if neede\n    domain: data.Domain,\n    doj: data.DOJ,\n    // Add logic to calculate creation date if needed\n    action: /*#__PURE__*/_jsxDEV(MDBox, {\n      children: /*#__PURE__*/_jsxDEV(MDButton, {\n        onClick: () => handleDelete(data.staff_id),\n        color: \"error\",\n        children: /*#__PURE__*/_jsxDEV(DeleteIcon, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 11\n    }, this)\n  }));\n  return /*#__PURE__*/_jsxDEV(MDBox, {\n    pt: 3,\n    children: /*#__PURE__*/_jsxDEV(DataTable, {\n      table: {\n        columns,\n        rows\n      },\n      isSorted: false,\n      entriesPerPage: false,\n      showTotalEntries: false,\n      noEndBorder: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 17\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 5\n  }, this);\n}\n_c = StaffEntryTable;\nvar _c;\n$RefreshReg$(_c, \"StaffEntryTable\");","map":{"version":3,"names":["React","MDBox","MDButton","DataTable","DeleteIcon","jsxDEV","_jsxDEV","StaffEntryTable","staffData","handleViewCodingQuestions","ID","response","fetch","jsondata","json","cfd","console","log","codeFormattedData","error","handleDelete","result","columns","Header","accessor","width","align","rows","map","data","name","staff_name","id","staff_id","email","staff_email","domain","Domain","doj","DOJ","action","children","onClick","color","fileName","_jsxFileName","lineNumber","columnNumber","pt","table","isSorted","entriesPerPage","showTotalEntries","noEndBorder","_c","$RefreshReg$"],"sources":["/home/jithu/Documents/career-guidance/fronend/src/layouts/StaffEntry/data/StaffEntryTable.jsx"],"sourcesContent":["import React from 'react'\nimport MDBox from 'components/MDBox';\nimport MDButton from 'components/MDButton';\nimport DataTable from 'examples/Tables/DataTable';\nimport DeleteIcon from '@mui/icons-material/Delete';\nexport default function StaffEntryTable({staffData}) {\n\n  const handleViewCodingQuestions = async (ID) => {\n    try {\n      const response = await fetch(`http://localhost:5001/Codequestion/${ID}`);\n      const jsondata = await response.json();\n\n      cfd(jsondata);\n      console.log(codeFormattedData);\n    } catch (error) {\n      console.error(\"Error fetching questions:\", error);\n    }\n  };\n    const handleDelete = async (ID) => {\n        try {\n          const response = await fetch(`http://localhost:5001/staffDelete/${ID}`);\n          const result = await response.json();\n          staffData();\n        } catch (error) {\n          console.error(\"Error fetching  awareness program:\", error);\n        }\n      };\n    const columns=[\n        { Header: \"Name\", accessor: \"name\", width: \"45%\", align: \"left\" },\n        { Header: \"Staff ID\", accessor: \"id\", align: \"left\" },\n        { Header: \"email\", accessor: \"email\", align: \"center\" },\n        { Header: \"Domain\", accessor: \"domain\", align: \"center\" },\n        { Header: \"DOJ\", accessor: \"doj\", align: \"center\" },\n        { Header: \"Action\", accessor: \"action\", align: \"center\" },\n      ]\n    \n      \n      const rows = staffData.map(data => ({\n        name: data.staff_name,\n        id:data.staff_id,\n        email: data.staff_email, // Add logic to calculate difficulty if neede\n        domain: data.Domain,\n        doj: data.DOJ, // Add logic to calculate creation date if needed\n        action: (\n          <MDBox>\n            <MDButton  onClick={() => handleDelete(data.staff_id)} color=\"error\">\n              <DeleteIcon/>\n            </MDButton>\n          </MDBox>\n        ),\n      }));\n  return (\n    <MDBox pt={3}>\n                <DataTable\n                  table={{ columns, rows }}\n                  isSorted={false}\n                  entriesPerPage={false}\n                  showTotalEntries={false}\n                  noEndBorder\n                />\n              </MDBox>\n  )\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}