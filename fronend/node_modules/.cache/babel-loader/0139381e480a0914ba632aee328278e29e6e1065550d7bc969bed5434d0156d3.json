{"ast":null,"code":"var _jsxFileName = \"/home/jithu/Documents/career-guidance/fronend/src/layouts/StaffEntry/data/StaffEntryTable.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport MDBox from 'components/MDBox';\nimport MDButton from 'components/MDButton';\nimport DataTable from 'examples/Tables/DataTable';\nimport DeleteIcon from '@mui/icons-material/Delete';\nimport VisibilityIcon from '@mui/icons-material/Visibility';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function StaffEntryTable({\n  staffData\n}) {\n  _s();\n  const [viewData, setViewData] = useState(null);\n  const handleView = async ID => {\n    try {\n      const response = await fetch(`http://localhost:5001/viewStaff/${ID}`);\n      const jsondata = await response.json();\n      setViewData(jsondata);\n      console.log(jsondata);\n    } catch (error) {\n      console.error(\"Error fetching questions:\", error);\n    }\n  };\n  const handleDelete = async ID => {\n    try {\n      const response = await fetch(`http://localhost:5001/staffDelete/${ID}`);\n      const result = await response.json();\n      staffData();\n    } catch (error) {\n      console.error(\"Error fetching  awareness program:\", error);\n    }\n  };\n  const columns = [{\n    Header: \"Name\",\n    accessor: \"name\",\n    width: \"45%\",\n    align: \"left\"\n  }, {\n    Header: \"Staff ID\",\n    accessor: \"id\",\n    align: \"left\"\n  }, {\n    Header: \"email\",\n    accessor: \"email\",\n    align: \"center\"\n  }, {\n    Header: \"Domain\",\n    accessor: \"domain\",\n    align: \"center\"\n  }, {\n    Header: \"DOJ\",\n    accessor: \"doj\",\n    align: \"center\"\n  }, {\n    Header: \"Action\",\n    accessor: \"action\",\n    align: \"center\"\n  }];\n  const rows = staffData.map(data => ({\n    name: data.staff_name,\n    id: data.staff_id,\n    email: data.staff_email,\n    // Add logic to calculate difficulty if neede\n    domain: data.Domain,\n    doj: data.DOJ,\n    // Add logic to calculate creation date if needed\n    action: /*#__PURE__*/_jsxDEV(MDBox, {\n      children: [/*#__PURE__*/_jsxDEV(MDButton, {\n        onClick: () => handleDelete(data.staff_id),\n        color: \"error\",\n        children: /*#__PURE__*/_jsxDEV(DeleteIcon, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(MDButton, {\n        onClick: () => handleView(data.uid),\n        color: \"info\",\n        children: /*#__PURE__*/_jsxDEV(VisibilityIcon, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 11\n    }, this)\n  }));\n  return /*#__PURE__*/_jsxDEV(MDBox, {\n    pt: 3,\n    children: /*#__PURE__*/_jsxDEV(DataTable, {\n      table: {\n        columns,\n        rows\n      },\n      isSorted: false,\n      entriesPerPage: false,\n      showTotalEntries: false,\n      noEndBorder: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 17\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 5\n  }, this);\n}\n_s(StaffEntryTable, \"wLV3kk+7dXn8CkomJlryW7UPnDk=\");\n_c = StaffEntryTable;\nvar _c;\n$RefreshReg$(_c, \"StaffEntryTable\");","map":{"version":3,"names":["React","useState","MDBox","MDButton","DataTable","DeleteIcon","VisibilityIcon","jsxDEV","_jsxDEV","StaffEntryTable","staffData","_s","viewData","setViewData","handleView","ID","response","fetch","jsondata","json","console","log","error","handleDelete","result","columns","Header","accessor","width","align","rows","map","data","name","staff_name","id","staff_id","email","staff_email","domain","Domain","doj","DOJ","action","children","onClick","color","fileName","_jsxFileName","lineNumber","columnNumber","uid","pt","table","isSorted","entriesPerPage","showTotalEntries","noEndBorder","_c","$RefreshReg$"],"sources":["/home/jithu/Documents/career-guidance/fronend/src/layouts/StaffEntry/data/StaffEntryTable.jsx"],"sourcesContent":["import React, { useState } from 'react'\nimport MDBox from 'components/MDBox';\nimport MDButton from 'components/MDButton';\nimport DataTable from 'examples/Tables/DataTable';\nimport DeleteIcon from '@mui/icons-material/Delete';\nimport VisibilityIcon from '@mui/icons-material/Visibility';\nexport default function StaffEntryTable({staffData}) {\n  const [viewData,setViewData] = useState(null);\n\n  const handleView = async (ID) => {\n    try {\n      const response = await fetch(`http://localhost:5001/viewStaff/${ID}`);\n      const jsondata = await response.json();\n\n      setViewData(jsondata);\n      console.log(jsondata);\n    } catch (error) {\n      console.error(\"Error fetching questions:\", error);\n    }\n  };\n    const handleDelete = async (ID) => {\n        try {\n          const response = await fetch(`http://localhost:5001/staffDelete/${ID}`);\n          const result = await response.json();\n          staffData();\n        } catch (error) {\n          console.error(\"Error fetching  awareness program:\", error);\n        }\n      };\n    const columns=[\n        { Header: \"Name\", accessor: \"name\", width: \"45%\", align: \"left\" },\n        { Header: \"Staff ID\", accessor: \"id\", align: \"left\" },\n        { Header: \"email\", accessor: \"email\", align: \"center\" },\n        { Header: \"Domain\", accessor: \"domain\", align: \"center\" },\n        { Header: \"DOJ\", accessor: \"doj\", align: \"center\" },\n        { Header: \"Action\", accessor: \"action\", align: \"center\" },\n      ]\n    \n      \n      const rows = staffData.map(data => ({\n        name: data.staff_name,\n        id:data.staff_id,\n        email: data.staff_email, // Add logic to calculate difficulty if neede\n        domain: data.Domain,\n        doj: data.DOJ, // Add logic to calculate creation date if needed\n        action: (\n          <MDBox>\n            <MDButton  onClick={() => handleDelete(data.staff_id)} color=\"error\">\n              <DeleteIcon/>\n            </MDButton>\n            <MDButton  onClick={() => handleView(data.uid)} color=\"info\">\n              <VisibilityIcon/>\n            </MDButton>\n          </MDBox>\n        ),\n      }));\n  return (\n    <MDBox pt={3}>\n                <DataTable\n                  table={{ columns, rows }}\n                  isSorted={false}\n                  entriesPerPage={false}\n                  showTotalEntries={false}\n                  noEndBorder\n                />\n              </MDBox>\n  )\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}